name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/operations-devops-pipeline-templates
    - repository: config
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.config

trigger:
  branches:
    include:
    - master

variables:
- group: platform-global
- group: platform-dev
- group: platform-dev-samlclient

stages:
#build

- stage: build
  displayName: Build
  jobs: 
   - job: archivefolder
     steps:

      - task: Npm@1
        displayName: Npm install
        inputs:
          command: custom
          workingDir: $(Build.Repository.LocalPath)
          verbose: true
          customCommand: install --force --json
          customRegistry: useFeed
          customFeed: '25763a8a-0ad8-43cf-a6a5-c0fcea6b74a7'

      - task: CopyFiles@2
        displayName: Copy files for staging
        inputs:
          SourceFolder: $(Build.Repository.LocalPath)
          Contents: |
            app_data/**
            azure/**
            config/**
            node_modules/**
            src/**
            package.json
            process.json
            azureStartup.sh
          TargetFolder: $(System.DefaultWorkingDirectory)/Publish
          CleanTargetFolder: true

      - task: ArchiveFiles@1
        displayName: Create Archive
        inputs:
          rootFolder: $(System.DefaultWorkingDirectory)/Publish
          includeRootFolder: false
          archiveType: zip
          archiveFile: $(Build.ArtifactStagingDirectory)/samlclient-$(Build.BuildId).zip
          replaceExistingArchive: true
    
      - task: PublishPipelineArtifact@1
        displayName: Publish Pipeline Artifact
        inputs:
          targetPath: $(Build.ArtifactStagingDirectory)/samlclient-$(Build.BuildId).zip
          artifact: samlclient-$(Build.BuildId)
          publishLocation: 'pipeline'
      
#Deploy
- stage: deploy
  dependsOn: build
  displayName: Deploy
  jobs:
  - deployment: deployService
    displayName: Deploy SAML client
    environment: "dev"
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - pwsh: |
              Get-ChildItem -Path $(Build.SourcesDirectory) –Recurse
          - template: /Infrastructure/steps/deploy-template.yml@devopsTemplates
            parameters:
              serviceConnection: $(devServiceConnection)
              subscriptionId: $(devSubscriptionId)
              resourceGroupName: $(projectId)d01-samlclient
              location: $(deploymentPrimaryLocation)
              templateFilePath: '$(Build.SourcesDirectory)/azure/template.json'
              armParameterOverrideString: '
                -appServiceName $(projectId)d01-samlclient
                -appServicePlanName $(projectId)d01-samlclient-asp
                -appServicePlanRG $(projectId)d01-samlclient
                -appServicePlanSku "{ "name": "S1", "tier": "Standard", "size": "S1", "family": "S", "capacity": 2}"
                -minTlsVersion 1.2
                -numberOfWorkers 1
                -nodeVersion 14.5.0
                -certificateName "blank"
                -appServiceConfigPath "/var"
                -keyVaultName "blank"
                -keyVaultResourceGroup "blank"
                -auditServiceBusConnectionString "auditbus-dev-sb-1.servicebus.windows.net"
                -auditServiceBusTopicName "audit"
                -auditServiceBusSubscriptionName "blank"
                -appInsightsInstrumentationKey "$(appInsightsInstrumentationKey)"
                -exclientBaseUrl "$(exclientBaseUrl)"
                -samlSigningCert "$(samlSigningCert)"
                -oidcHost "$(oidcHost)"
                -redisConn "$(redisConn)"
                -samlSigningCertRsaPrivateKey "$(samlSigningCertRsaPrivateKey)"
                -secretKeyBase "$(secretKeyBase)"
                -serviceID "$(serviceID)"
                -assertionsHost "$(assertionsHost)"
                -assertionsSecret "$(assertionsSecret)"
                -profileHost "$(profileHost)"
                -identityURL "$(identityURL)"'

- stage: publishapp
  dependsOn: deploy
  displayName: Publish App
  jobs: 
   - job: publish
     steps:     
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: samlclient-$(Build.BuildId)
          path: $(System.ArtifactsDirectory)
      
      - task: PowerShell@2
        inputs:
          targetType: inline
          script: |
            Get-ChildItem $(System.ArtifactsDirectory) –Recurse
      
      - task: AzureRmWebAppDeployment@4
        displayName: Deploy Code
        inputs:
          azureSubscription: $(devServiceConnection)
          appType: webAppLinux
          WebAppName: $(projectId)d01-samlclient
          deployToSlotOrASE: true
          ResourceGroupName: $(projectId)d01-samlclient
          SlotName: staging
          packageForLinux: "$(System.ArtifactsDirectory)/samlclient-$(Build.BuildId).zip"
          RuntimeStack: "node|12.9"
          WebConfigParameters: '-Handler iisnode -NodeStartFile $(platformGlobalNodeStart) -appType node'
          enableCustomDeployment: true
          TakeAppOfflineFlag: false
          RemoveAdditionalFilesFlag: true
          ExcludeFilesFromAppDataFlag: false
          StartupCommand: "/home/site/wwwroot/azureStartup.sh"
     
      - task: AzureAppServiceManage@0
        displayName: 'Swap Slots'
        inputs:
          azureSubscription: $(devServiceConnection)
          WebAppName: $(projectId)d01-samlclient
          ResourceGroupName: $(projectId)d01-samlclient
          SourceSlot: staging